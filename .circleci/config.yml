version: 2.1

commands:
  carthage-bootstrap:
    steps:
      - run:
          name: Determine XCode version
          command: echo "$(xcodebuild -version)" >| xcode_version
      - restore_cache:
          name: Restore Carthage/ cache
          key: carthage-dir-cache-{{ arch }}-{{ checksum "xcode_version" }}-{{ checksum "Cartfile.resolved" }}
      - run:
          name: Bootstrap Carthage dependencies
          command: ./carthage_command.sh
      - save_cache:
          name: Save Carthage/ cache
          key: carthage-dir-cache-{{ arch }}-{{ checksum "xcode_version" }}-{{ checksum "Cartfile.resolved" }}
          paths:
            - Carthage
  unset-clone-via-ssh:
    steps:
      - run:
          name: Unset cloning via SSH instead of HTTPS
          command: git config --global --unset url."ssh://git@github.com".insteadOf
  generate-user-scripts:
    steps:
      - run:
          name: Generate user scripts
          command: npm install && npm run build
  generate-content-blocker:
    steps:
      - run:
          name: Generate content blocker
          command: (cd content-blocker-lib-ios/ContentBlockerGen && swift run)
  build-client:
    steps:
      - generate-user-scripts
      - generate-content-blocker
      - run:
          name: Build Client
          command: xcodebuild build -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12'
  build-codegen:
    steps:
      - run:
          name: Build Codegen
          command: xcodebuild build -scheme Codegen -workspace Neeva.xcworkspace -destination 'platform=macOS'

jobs:
  build_all:
    macos:
      xcode: "12.4.0"
    steps:
      - checkout
      - carthage-bootstrap
      - unset-clone-via-ssh
      - build-codegen
      - build-client

workflows:
  version: 2
  build:
    jobs:
      - build_all
